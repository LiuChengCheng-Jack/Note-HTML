一： 基本特性
1. css背景

属性	描述
background	简写属性，作用是将背景属性设置在一个声明中。
background-attachment	背景图像是否固定或者随着页面的其余部分滚动。 //默认是scoll,设置为fixed则背景不会随着页面儿滚动
background-color	设置元素的背景颜色。
background-image	把图像设置为背景。
background-position	设置背景图像的起始位置。
background-repeat	设置背景图像是否及如何重复。

2. 文本
属性	描述
color	设置文本颜色
direction	设置文本方向。
line-height	设置行高。   //设置对齐常用到的属性，将li的line-height设置为盒子的高度
letter-spacing	设置字符间距。
text-align	对齐元素中的文本。//设置对齐 center left right
text-decoration	向文本添加修饰。 //在<a>中会经常使用
text-indent	缩进元素中文本的首行。
text-shadow	设置文本阴影。CSS2 包含该属性，但是 CSS2.1 没有保留该属性。
text-transform	控制元素中的字母。
unicode-bidi	设置文本方向。
white-space	设置元素中空白的处理方式。
word-spacing	设置字间

3. css字体
属性	描述

font	简写属性。作用是把所有针对字体的属性设置在一个声明中。
font-family	设置字体系列。
font-size	设置字体的尺寸。 //em推荐
font-size-adjust	当首选字体不可用时，对替换字体进行智能缩放。（CSS2.1 已删除该属性。）
font-stretch	对字体进行水平拉伸。（CSS2.1 已删除该属性。）
font-style	设置字体风格。 //normal italic  oblique 
font-variant	以小型大写字体或者正常字体显示文本。
font-weight	设置字体的粗细。

4.链接

a:link - 普通的、未被访问的链接
a:visited - 用户已访问的链接
a:hover - 鼠标指针位于链接的上方
a:active - 链接被点击的时刻

a:hover 必须位于 a:link 和 a:visited 之后
a:active 必须位于 a:hover 之后
通常是a:link,a:visited{}  a:hover,a:active{} 这样合起来写

5.列表

属性	描述
list-style	简写属性。用于把所有用于列表的属性设置于一个声明中。
list-style-image	将图象设置为列表项标志。
list-style-position	设置列表中列表项标志的位置。//有inside 和 outside之分
list-style-type	设置列表项标志的类型。

6. 表格

 border-collapse 属性设置是否将表格边框折叠为单一边框： border-collapse:collapse;
text-align 和 vertical-align 属性设置表格中文本的对齐方式。
text-align 属性设置水平对齐方式，比如左对齐、右对齐或者居中： vertical-align 属性设置垂直对齐方式，比如顶部对齐、底部对齐或居中对齐：
属性	描述
border-collapse	设置是否把表格边框合并为单一的边框。
border-spacing	设置分隔单元格边框的距离。
caption-side	设置表格标题的位置。
empty-cells	设置是否显示表格中的空单元格。
table-layout	设置显示单元、行和列的算法。

7. 轮廓 轮廓（outline）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。

属性	描述
outline	在一个声明中设置所有的轮廓属性。	
outline-color	设置轮廓的颜色。	
outline-style	设置轮廓的样式。	
outline-width	设置轮廓的宽度。

二：框模型
 
 1.padding margin 百分比数值 百分数值是相对于其父元素的 width 计算的 
 2.上下内边距与左右内边距一致；即上下内边距的百分数会相对于父元素宽度设置，而不是相对于高度。
 3.border:CSS 规范指出，边框绘制在“元素的背景之上”。这很重要，因为有些边框是“间断的”（例如，点线边框或虚线框），元素的背景应当出现在边框的可见部分之间。
  border-style:有很多种  可以分别为四个边框线设置不同的颜色，样式，宽度   border-color: transparent;可将边框设置为透明
4. 外边距合并：只有普通文档流中块框的垂直外边距才会发生外边距合并。行内框、浮动框或绝对定位之间的外边距不会合并。

三. css定位
 框：块框，行内框，行框
 使用 display 属性改变生成的框的类型。(none block inline)

 CSS 有三种基本的定位机制：普通流、浮动和绝对定位。 
1. position
 static:元素框正常生成。块级元素生成一个矩形框，作为文档流的一部分，行内元素则会创建一个或多个行框，置于其父元素中。
 relative:元素框偏移某个距离。元素仍保持其未定位前的形状，它原本所占的空间仍保留。
 absolute:元素框从文档流完全删除，并相对于其包含块定位。包含块可能是文档中的另一个元素或者是初始包含块。元素原先在正常文档流中所占的空间会关闭，就好像元素原来不            存在一样。元素定位后生成一个块级框，而不论原来它在正常流中生成何种类型的框。
 fixed:元素框的表现类似于将 position 设置为 absolute，不过其包含块是视窗本身。
2. 
属性	描述
position	把元素放置到一个静态的、相对的、绝对的、或固定的位置中。
top	定义了一个定位元素的上外边距边界与其包含块上边界之间的偏移。
right	定义了定位元素右外边距边界与其包含块右边界之间的偏移。
bottom	定义了定位元素下外边距边界与其包含块下边界之间的偏移。
left	定义了定位元素左外边距边界与其包含块左边界之间的偏移。
overflow	设置当元素的内容溢出其区域时发生的事情。
clip	设置元素的形状。元素被剪入这个形状之中，然后显示出来。
vertical-align	设置元素的垂直对齐方式。
z-index	设置元素的堆叠顺序。

3.相对定位： 相对定位会按照元素的原始位置对该元素进行移动。元素仍保持其未定位前的形状，它原本所占的空间仍保留。

4. 绝对定位 绝对定位的元素的位置相对于最近的已定位祖先元素，如果元素没有已定位的祖先元素，那么它的位置相对于最初的包含块
  fixed是特殊的absolute,其包含块为窗口

   因为绝对定位的框与文档流无关，所以它们可以覆盖页面上的其它元素。可以通过设置 z-index 属性来控制这些框的堆放次序   
  z-index 属性设置元素的堆叠顺序。拥有更高堆叠顺序的元素总是会处于堆叠顺序较低的元素的前面。

5. 浮动

  行框浮动框旁边的行框被缩短，从而给浮动框留出空间，行框围绕浮动框。因此，创建浮动框可以使文本围绕图像：
  要想阻止行框围绕浮动框，需要对该框应用 clear 属性。clear 属性的值可以是 left、right、both 或 none，它表示框的哪些边不应该挨着浮动框。
  p{clear:left;}这样p的左边就不会有浮动元素

三. 高级应用
 1.css对齐 (1) margin (2) position （3）float 后两个属性使用的时候要 始终设置 !DOCTYPE 声明
 2. css尺寸属性 这些属性可以控制属性的表现形式，通常对图像使用尺寸属性
属性	描述
height	设置元素的高度。
line-height	设置行高。
max-height	设置元素的最大高度。
max-width	设置元素的最大宽度。
min-height	设置元素的最小高度。
min-width	设置元素的最小宽度。
width	设置元素的宽度。

3.CSS 分类属性 (Classification)
CSS 分类属性允许你控制如何显示元素，设置图像显示于另一元素中的何处，相对于其正常位置来定位元素，使用绝对值来定位元素，以及元素的可见度。

属性	描述
clear	设置一个元素的侧面是否允许其他的浮动元素。
cursor	规定当指向某元素之上时显示的指针类型。 改变光标的类型
display	设置是否及如何显示元素。 inline会使两个<p>在同一行显示，none则代表不显式，block会使两个<span>不在同一行显示
float	定义元素在哪个方向浮动。
position	把元素放置到一个静态的、相对的、绝对的、或固定的位置中。
visibility	设置元素是否可见或不可见。visible hidden

4. css 导航栏
 
设置垂直导航栏：display:block - 把链接显示为块元素可使整个链接区域可点击（不仅仅是文本），同时也允许我们规定宽度。

水平导航栏的两种设置：（1）将li设置为 display:inline （2）使用float属性

5. css 图片库
   <a target="_blank" href="/i/tulip_ballade.jpg"> 代表此链接开启一个新的窗口
6. 图像透明度
 opacity:1.0;
filter:alpha(opacity=100); /* For IE8 and earlier */

7. 媒介类型
 例子：@media screen
{
p.test {font-family:verdana,sans-serif; font-size:14px}
}
@media print
{
p.test {font-family:times,serif; font-size:10px}
}

媒介类型	描述
all	用于所有的媒介设备。
aural	用于语音和音频合成器。
braille	用于盲人用点字法触觉回馈设备。
embossed	用于分页的盲人用点字法打印机。
handheld	用于小的手持的设备。
print	用于打印机。
projection	用于方案展示，比如幻灯片。
screen	用于电脑显示器。
tty	用于使用固定密度字母栅格的媒介，比如电传打字机和终端。
tv	用于电视机类型的设备。

8. 注意事项：尽量避免的属性

四. 选择器

1.属性选择器 后代选择器(所有的后代，不论间隔几层)

2.子元素选择器：子元素选择器（Child selectors）只能选择作为某元素子元素的元素

选择只作为 h1 元素子元素的 strong 元素，可以这样写：h1 > strong {color:red;}

(2) 结合后代选择器和子选择器
  table.company td > p
 上面的选择器会选择作为 td 元素子元素的所有 p 元素，这个 td 元素本身从 table 元素继承，该 table 元素有一个包含 company 的 class 属性。

3. 相邻兄弟选择器

相邻兄弟选择器使用了加号（+），即相邻兄弟结合符。 
h1 + p {margin-top:50px;}
这个选择器读作：“选择紧接在 h1 元素后出现的段落，h1 和 p 元素拥有共同的父元素”。

4.css伪类

锚伪类 :first-child 伪类 :lang 伪类（向带有指定 lang 属性的元素添加样式。）

5. 伪元素
 :first-line 伪元素 "first-line" 伪元素只能用于块级元素。 
 :first-letter 伪元素 "first-letter" 伪元素用于向文本的首字母设置特殊样式： 只能用于块级元素。
 :before 伪元素":before" 伪元素可以在元素的内容前面插入新内容。
 :after 伪元素 ":after" 伪元素可以在元素的内容之后插入新内容。


五.css 3  

要考虑程序的兼容性
transform:rotate(30deg);
-ms-transform:rotate(30deg); /* IE 9 */
-moz-transform:rotate(30deg); /* Firefox */
-webkit-transform:rotate(30deg); /* Safari and Chrome */
-o-transform:rotate(30deg); /* Opera */

其中最重要的 CSS3 模块包括：
选择器 框模型 背景和边框 文本效果 2D/3D 转换 动画 多列布局

1.边框属性：
border-radius //支持圆角特性
box-shadow //边框阴影 用时了解其属性
border-image IE不支持，其他浏览器也要注意格式

2.css3背景  background-size background-origin

CSS3 允许您为元素使用多个背景图像。

(1)background-size 属性规定背景图片的尺寸。
在 CSS3 之前，背景图片的尺寸是由图片的实际尺寸决定的。在 CSS3 中，可以规定背景图片的尺寸，这就允许我们在不同的环境中重复使用背景图片。
您能够以像素或百分比规定尺寸。如果以百分比规定尺寸，那么尺寸相对于父元素的宽度和高度。

例子：-moz-background-size:63px 100px; /* 老版本的 Firefox */
      background-size:63px 100px;

(2)background-origin 属性规定背景图片的定位区域。
背景图片可以放置于 content-box、padding-box 或 border-box 区域。

属性	描述	
background-clip	规定背景的绘制区域。	
background-origin	规定背景图片的定位区域。	
background-size	规定背景图片的尺寸。


3.css3文本效果

 text-shadow word-wrap 
Internet Explorer 10、Firefox、Chrome、Safari 以及 Opera 支持 text-shadow 属性。 所有主流浏览器都支持 word-wrap 属性。

(1)text-shadow 规定水平阴影、垂直阴影、模糊距离，以及阴影的颜色
(2)word-wrap: normal|break-word; break-word 在长单词或 URL 地址内部进行换行。
(3)text-overflow: clip|ellipsis|string;
 .....

4.css3 2D-3D转换

transform：Internet Explorer 10、Firefox 以及 Opera 支持 transform 属性。
Chrome 和 Safari 需要前缀 -webkit-。
注释：Internet Explorer 9 需要前缀 -ms-。

transform-origin	允许你改变被转换元素的位置。 要与transform合用
(1) 2D转换 
  通过 translate() 方法，元素从其当前位置移动，根据给定的 left（x 坐标） 和 top（y 坐标） 位置参数：
  transform: translate(50px,100px);
 -ms-transform: translate(50px,100px);		/* IE 9 */
 -webkit-transform: translate(50px,100px);	/* Safari and Chrome */
 -o-transform: translate(50px,100px);		/* Opera */
 -moz-transform: translate(50px,100px);		/* Firefox */

通过 rotate() 方法，元素顺时针旋转给定的角度。允许负值，元素将逆时针旋转。
 transform: rotate(30deg);

通过 scale() 方法，元素的尺寸会增加或减少，根据给定的宽度（X 轴）和高度（Y 轴）参数：
  transform: scale(2,4);

通过 skew() 方法，元素翻转给定的角度，根据给定的水平线（X 轴）和垂直线（Y 轴）参数：
 skew(30deg,20deg) 围绕 X 轴把元素翻转 30 度，围绕 Y 轴翻转 20 度。

matrix() 方法把所有 2D 转换方法组合在一起。
matrix() 方法需要六个参数，包含数学函数，允许您：旋转、缩放、移动以及倾斜元素。

2. 3D转化 增加了z轴

 Internet Explorer 10 和 Firefox 支持 3D 转换。 Chrome 和 Safari 需要前缀 -webkit-。 Opera 仍然不支持 3D 转换（它只支持 2D 转换）。


属性	描述	
transform	向元素应用 2D 或 3D 转换。	
transform-origin	允许你改变被转换元素的位置。	
transform-style	规定被嵌套元素如何在 3D 空间中显示。	
perspective	规定 3D 元素的透视效果。	
perspective-origin	规定 3D 元素的底部位置。	
backface-visibility	定义元素在不面对屏幕时是否可见。

2D Transform 方法
函数	描述
matrix3d(n,n,n,n,n,n,
n,n,n,n,n,n,n,n,n,n)	定义 3D 转换，使用 16 个值的 4x4 矩阵。
translate3d(x,y,z)	定义 3D 转化。
translateX(x)	定义 3D 转化，仅使用用于 X 轴的值。
translateY(y)	定义 3D 转化，仅使用用于 Y 轴的值。
translateZ(z)	定义 3D 转化，仅使用用于 Z 轴的值。
scale3d(x,y,z)	定义 3D 缩放转换。
scaleX(x)	定义 3D 缩放转换，通过给定一个 X 轴的值。
scaleY(y)	定义 3D 缩放转换，通过给定一个 Y 轴的值。
scaleZ(z)	定义 3D 缩放转换，通过给定一个 Z 轴的值。
rotate3d(x,y,z,angle)	定义 3D 旋转。
rotateX(angle)	定义沿 X 轴的 3D 旋转。
rotateY(angle)	定义沿 Y 轴的 3D 旋转。
rotateZ(angle)	定义沿 Z 轴的 3D 旋转。
perspective(n)	定义 3D 转换元素的透视视图。	

5. css3过渡
Internet Explorer 10、Firefox、Chrome 以及 Opera 支持 transition 属性。
Safari 需要前缀 -webkit-。 

CSS3 过渡是元素从一种样式逐渐改变为另一种的效果。
要实现这一点，必须规定两项内容：
 规定您希望把效果添加到哪个 CSS 属性上
 规定效果的时长 

例子：transition:width 2s, height 2s; //可以指定一个或者多个属性

transition: width 1s linear 2s;分别指定过渡属性，过渡时间，过渡效果，延迟时间
-moz-transition:width 1s linear 2s;
-webkit-transition:width 1s linear 2s;/* Safari and Chrome */
-o-transition:width 1s linear 2s;;/* Opera */

6. css3动画

@keyframes 规则用于创建动画。在 @keyframes 中规定某项 CSS 样式，就能创建由当前样式逐渐改为新样式的动画效果。
 
Internet Explorer 10、Firefox 以及 Opera 支持 @keyframes 规则和 animation 属性。
Chrome 和 Safari 需要前缀 -webkit-。

（1）首先定义一个@keyframes 规则

@keyframes myfirst
{
from {background: red;}
to {background: yellow;}
}

@-moz-keyframes myfirst /* Firefox */
{
from {background: red;}
to {background: yellow;}
}

@-webkit-keyframes myfirst /* Safari 和 Chrome */
{
from {background: red;}
to {background: yellow;}
}

@-o-keyframes myfirst /* Opera */
{
from {background: red;}
to {background: yellow;}
}

(2) 在css中使用属性animation  animation: myfirst 5s;
 
 通过规定至少以下两项 CSS3 动画属性，即可将动画绑定到选择器：
  规定动画的名称
  规定动画的时长

动画的其他定义方法， {}内可以有多个属性

@keyframes myfirst
{
0%   {background: red;}
25%  {background: yellow;}
50%  {background: blue;}
100% {background: green;}
}

animation: myfirst 5s linear 2s infinite alternate; 简写属性  分别为动画样式，时间，改变方式，延迟，动画计数，方向

7. css3 多列

 Internet Explorer 10 和 Opera 支持多列属性。
 Firefox 需要前缀 -moz-。
 Chrome 和 Safari 需要前缀 -webkit-。

column-count 属性规定元素应该被分隔的列数： 
-moz-column-count:3; /* Firefox */
-webkit-column-count:3; /* Safari and Chrome */
column-count:3;

column-gap 属性规定列之间的间隔
column-rule 属性设置列之间的宽度、样式和颜色规则。

8. css3用户界面
 重设元素尺寸、盒尺寸以及轮廓  resize box-sizingoutline-offset

resize 属性规定是否可由用户调整元素尺寸。 Firefox、Chrome 以及 Safari 支持 resize 属性。

box-sizing 属性允许您以确切的方式定义适应某个区域的具体内容。 Internet Explorer、Chrome、Safari 以及 Opera 支持 box-sizing 属性。Firefox 需要前缀 -moz-。

outline:2px solid red;
outline-offset:15px;
轮廓与边框有两点不同：
 轮廓不占用空间
 轮廓可能是非矩形
所有主流浏览器都支持 outline-offset 属性，除了 Internet Explorer。



